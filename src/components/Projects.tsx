// src/components/Projects.tsx
import React, { useState } from "react";
import { ExternalLink, Github, Cpu, Leaf, Zap } from "lucide-react";
import ProjectModal from "./ProjectModal"; // Importe le nouveau composant de modale

const Projects: React.FC = () => {
  // --- Ã‰TATS POUR LA MODALE ---
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedProject, setSelectedProject] = useState<any>(null); // Stockera le projet Ã  afficher dans la modale

  const openModal = (project: any) => {
    setSelectedProject(project);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setSelectedProject(null); // RÃ©initialise le projet sÃ©lectionnÃ©
  };
  // --- FIN DES Ã‰TATS DE LA MODALE ---

  const projects = [
    {
      title: "Le Murmure du Fungus",
      subtitle: "Kits de Culture de Champignons Artisanaux",
      description:
        "Production de kits de culture de champignons haut de gamme, gourmands/mÃ©dicinaux combinant des mÃ©thodes de culture traditionnelles avec une technologie de surveillance moderne.",
      technologies: [
        "Mycologie",
        "React/Next.js",
        "Eâ€‘commerce",
        "Marketing Digital",
        "IntÃ©gration IoT (python, FLask, postgress)",
      ],
      icon: <Leaf className="w-8 h-8" />,
      color: "from-teal-500 to-teal-700",
      bgColor: "bg-teal-50 dark:bg-teal-900/20",
      status: "En Production",

      // â€”â€”â€” CONTENU DÃ‰TAILLÃ‰ POUR LA MODALE â€”â€”â€”
      fullDescription: [
         
        "Le Murmure du Fungus est nÃ© en 2024, dans les deux mÃ¨tres carrÃ©s dâ€™un gardeâ€‘robe dâ€™Ã©tudiant. Câ€™est lÃ  que, parallÃ¨lement Ã  mon AEC en dÃ©veloppement de systÃ¨mes, jâ€™ai installÃ© ma premiÃ¨re miniâ€‘serre Ã  champignons comestibles.",
        "Ce projet est le fruit dâ€™une passion pour deux forces complÃ©mentaires : lâ€™autosuffisance alimentaire et lâ€™innovation technologique.",
        "Jâ€™y dÃ©veloppe:",
        "â€¢ Un site web en React, avec un backend Flask et une base de donnÃ©es PostgreSQL, pour la vitrine et la vente de kits de culture de champignons.",
        "â€¢ Et un systÃ¨me IoT pilotÃ© par Raspberryâ€¯Pi, connectÃ© Ã  des capteurs environnementaux et des contrÃ´leurs qui rÃ©gulent humiditÃ©, tempÃ©rature et COâ‚‚.",
        "En parallÃ¨le, je collecte les donnÃ©es de culture pour entraÃ®ner un modÃ¨le dâ€™intelligence artificielle sur mesure, capable dâ€™optimiser les cycles de production â€” mieux produire, avec moins.",
        "Le Murmure du Fungus poursuit une double mission :",
        "1. Offrir des champignons ultraâ€‘frais, cultivÃ©s localement, de maniÃ¨re responsable et artisanale.",
        "2. Explorer les frontiÃ¨res de lâ€™agritech.",
        
      ],

      images: [
        "/images/mini-serre-fungus.jpg",

      ],
      features: [
        "Kits de culture prÃ©â€‘ensemencÃ©s",
        "VariÃ©tÃ©s rares et populaires (Lionâ€™s Mane , Pleurote, Enoki, Cordyceps )",
        "Guide de culture pasâ€‘Ã â€‘pas inclus",
        "Option de capteurs IoT pour suivi en temps rÃ©el",
        "ContrÃ´le climatique pilotÃ© par IA",
        "API ouverte et documentation open source"
        
      ],
      websiteLink: "https://murmure-du-fungus.com",
      githubLink: "",
    },

    
    {
      title: "OvoOx",
      subtitle: "Miniâ€‘Serres & Solutions AgriTech IoT",
      description:
        "Gamme de produit agritech connectÃ©es, imprimÃ©s en 3D localement â€” lâ€™artisanat High tech au service de lâ€™agriculture urbaine.",
      technologies: [
        "Raspberryâ€¯Pi",
        "Python",
        "React/Next.js",
        "Flask",
        "Capteurs IoT",
        "Impressionâ€¯3D",
        "Vision par ordinateur",
        "ModÃ¨les IA",
      ],
      icon: <Cpu className="w-8 h-8" />,
      color: "from-blue-500 to-blue-700",
      bgColor: "bg-blue-50 dark:bg-blue-900/20",
      status: "En DÃ©veloppement Actif",

      // â€”â€”â€” CONTENU DÃ‰TAILLÃ‰ POUR LA MODALE â€”â€”â€”
      fullDescription: [
        "ðŸš€ OvoOx : lâ€™artisanat highâ€‘tech du futur",
        "OvoOx est mon projet phare Ã  long terme : une entreprise dÃ©diÃ©e Ã  la dÃ©mocratisation de la culture de champignons et de lâ€™agriculture urbaine grÃ¢ce Ã  des miniâ€‘serres intelligentes, modulaires et abordables.",
        "ConÃ§u et fabriquÃ© localement, piÃ¨ce par piÃ¨ce, grÃ¢ce Ã  lâ€™impressionâ€¯3D â€”",
        "La plateforme OvoOx comprend :",
        "â€¢ Des miniâ€‘serres IoT pour champignons (contrÃ´le intelligent de lâ€™humiditÃ©, de la tempÃ©rature et du COâ‚‚).",
        "â€¢ Des plateaux de culture hydroponique plugâ€‘andâ€‘play pour herbes fraÃ®ches et microâ€‘pousses.",
        "â€¢ Des modules dâ€™optimisation de semis Ã©quipÃ©s de LED spectrales et dâ€™IA pour accÃ©lÃ©rer la germination.",
        "Je programme moiâ€‘mÃªme les microâ€‘contrÃ´leurs, les algorithmes de rÃ©gulation climatique et lâ€™application mobile (en cours) qui unifiera le tout.",
        ,
        "Mon ambition est de faire dâ€™OvoOx une rÃ©fÃ©rence de lâ€™agritech, oÃ¹ chaque serre, chaque plateau et chaque ligne de code restent accessibles, rÃ©parables et Ã©volutifs."
      ],

      images: [
        "/images/ovoox-mini-serre.png",
      ],

      features: [
        "Miniâ€‘serres modulaires imprimÃ©es en 3D",
        "Plateaux hydroponiques intelligents",
        
        "App mobile (iOS/Android) en dÃ©veloppement",
        
      ],

      
      websiteLink: "www.OvoOx.com", 
    },


{
  title: "Suite IoT AgriTech",
  subtitle: "SystÃ¨mes EmbarquÃ©s pour l'Agriculture",
  description:
    "Collection de projets IoT basÃ©s sur Raspberry Pi et microcontrÃ´leurs pour la gestion et l'automatisation agricole.",
  technologies: [
    "Raspberry Pi",
    "Arduino",
    "Capteurs",
    "Automatisation",
    "Python",
  ],
  icon: <Zap className="w-8 h-8" />,
  color: "from-cyan-500 to-cyan-700",
  bgColor: "bg-cyan-50 dark:bg-cyan-900/20",
  status: "Phase de Recherche",

  // â€”â€”â€” CONTENU DÃ‰TAILLÃ‰ POUR LA MODALE â€”â€”â€”
  // Les titres sont dans des <h3> et les liens dans des <a href...>
  fullDescription: [ "Lien github vers tous mes projets IoT publiques :",
    
  ],
  images: [],
  features: [],
  githubLink: "https://github.com/Ulysse-Dev-Serre",
  websiteLink: "",
},

    
  ];

  return (
    <section
      id="projects"
      className="py-20 px-4 sm:px-6 lg:px-8
                 bg-gradient-to-br from-blue-950 to-cyan-950
                 dark:from-black dark:to-gray-950 text-white"
    >
      <div className="max-w-7xl mx-auto">
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-serif font-bold text-white dark:text-white mb-4">
            Projets en Vedette
          </h2>
          <p className="text-xl text-blue-100 dark:text-cyan-200 max-w-3xl mx-auto">
            LÃ  oÃ¹ la sagesse ancestrale rencontre la technologie de pointe â€”
            explorant l'intersection de la nature, du code et de l'innovation.
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {projects.map((project, index) => (
            <div
              key={index}
              className="group relative overflow-hidden rounded-2xl bg-slate-800 dark:bg-slate-900 shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2"
            >
              <div className="absolute top-4 right-4 z-10">
                <span className="px-3 py-1 bg-white/10 dark:bg-white/5 text-xs font-medium text-gray-800 dark:text-white/80 rounded-full backdrop-blur-sm">
                  {project.status}
                </span>
              </div>

              <div className={`${project.bgColor} p-8 relative`}>
                <div
                  className={`inline-flex p-4 rounded-2xl bg-gradient-to-br ${project.color} text-white mb-4 shadow-lg`}
                >
                  {project.icon}
                </div>

                <div className="absolute top-0 right-0 w-32 h-32 opacity-10">
                  <svg
                    viewBox="0 0 100 100"
                    className={`w-full h-full text-${
                      project.color.split(" ")[0].split("-")[1]
                    }-400`}
                  >
                    <defs>
                      <pattern
                        id={`pattern-${index}`}
                        x="0"
                        y="0"
                        width="20"
                        height="20"
                        patternUnits="userSpaceOnUse"
                      >
                        <circle cx="10" cy="10" r="1" fill="currentColor" />
                      </pattern>
                    </defs>
                    <rect
                      width="100"
                      height="100"
                      fill={`url(#pattern-${index})`}
                    />
                  </svg>
                </div>
              </div>

              <div className="p-8">
                <h3 className="text-2xl font-serif font-bold text-white mb-2">
                  {project.title}
                </h3>
                <p
                  className={`text-${
                    project.color.split(" ")[0].split("-")[1]
                  }-400 font-medium mb-4`}
                >
                  {project.subtitle}
                </p>
                <p className="text-blue-100 dark:text-cyan-200 mb-6 leading-relaxed">
                  {project.description}
                </p>

                <div className="flex flex-wrap gap-2 mb-6">
                  {project.technologies.map((tech, techIndex) => (
                    <span
                      key={techIndex}
                      className="px-3 py-1 bg-white/10 dark:bg-white/5 text-white/80 rounded-full text-sm"
                    >
                      {tech}
                    </span>
                  ))}
                </div>

                <div className="flex space-x-4">
                  {/* Bouton "Code" (vers GitHub) - conditionnel si githubLink existe */}
                  {project.githubLink && (
                    <a
                      href={project.githubLink}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center space-x-2 px-4 py-2 bg-white/10 dark:bg-white/5 text-white/80 rounded-lg hover:bg-white/20 dark:hover:bg-white/10 transition-colors"
                    >
                      <Github className="w-4 h-4" />
                      <span>Code</span>
                    </a>
                  )}
                  {/* Bouton "En savoir plus" - Ouvre la modale */}
                  <button
                    onClick={() => openModal(project)}
                    className={`flex items-center space-x-2 px-4 py-2 bg-${
                      project.color.split(" ")[0].split("-")[1]
                    }-600 hover:bg-${
                      project.color.split(" ")[0].split("-")[1]
                    }-700 text-white rounded-lg transition-colors`}
                  >
                    <ExternalLink className="w-4 h-4" />
                    <span>En Savoir Plus</span>
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* --- INCLUSION DE LA MODALE ICI --- */}
      {selectedProject && ( // Rendre la modale seulement si un projet est sÃ©lectionnÃ©
        <ProjectModal
          isOpen={isModalOpen}
          onClose={closeModal}
          project={selectedProject}
        />
      )}
      {/* --- FIN DE L'INCLUSION DE LA MODALE --- */}
    </section>
  );
};

export default Projects;
